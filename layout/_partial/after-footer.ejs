<%- js('/js/jquery-2.0.3.min.js') %>
<%- js('/js/lazyload.min.js') %>
<% if (theme.fancybox){ %>
  <%- js('fancybox/jquery.fancybox.min') %>
<% } %>
<% if (theme.search){ %>
  <%- js('js/search') %>
<% } %>
<% if (is_post() || page.comment) { %>
  <% if (theme.gitalk.enable) { %>
    <%- css('https://unpkg.com/gitalk/dist/gitalk.css') %>
    <%- js('https://unpkg.com/gitalk/dist/gitalk.min.js') %>
    <%- js('https://cdn.bootcss.com/blueimp-md5/2.10.0/js/md5.min.js') %>
    <script type="text/javascript">
      var gitalk = new Gitalk({
        clientID: '<%- theme.gitalk.clientID %>',
        clientSecret: '<%- theme.gitalk.clientSecret %>',
        repo: '<%- theme.gitalk.repo %>',
        owner: '<%- theme.gitalk.owner %>',
        admin: ['<%- theme.gitalk.admin %>'],
        // id: location.pathname,      // Ensure uniqueness and length less than 50
        id: md5(location.pathname),
        distractionFreeMode: false  // Facebook-like distraction free mode
      })
    gitalk.render('gitalk-container')
    </script>
  <% } %>
  <% if (theme.valine.enable) { %>
    <%- js('https://cdn1.lncld.net/static/js/3.0.4/av-min.js') %>
    <%- js('https://unpkg.com/valine/dist/Valine.min.js') %> 
    <script type="text/javascript">
      new Valine({
        el: '#vcomments' ,
        appId: '<%- theme.valine.appID %>',
        appKey: '<%- theme.valine.appKEY %>',
        notify: <%- theme.valine.notify %>, 
        verify: <%- theme.valine.verify %>,
        avatar: '<%- theme.valine.avatar %>', 
        placeholder: '<%- theme.valine.holder %>' 
      });  
    </script>
  <% } %>
<%} %>
<%- js('js/ocean') %>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-135642131-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'UA-135642131-1');
</script>
<!-- Google Fonts -->
<script>
/*** https://codepen.io/chriscoyier/pen/jXEaKQ ***/
  const GF_loadFont = (url) => {
    // the 'fetch' equivalent has caching issues
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.onreadystatechange = () => {
      if (xhr.readyState == 4 && xhr.status == 200) {
        let css = xhr.responseText;
        css = css.replace(/}/g, 'font-display: swap; }');
        const head = document.getElementsByTagName('head')[0];
        const style = document.createElement('style');
        style.appendChild(document.createTextNode(css));
        head.appendChild(style);
      }
    };
    xhr.send();
  }
GF_loadFont('https://fonts.googleapis.com/css?family=Source+Code+Pro:500,600');
GF_loadFont('https://fonts.googleapis.com/css?family=Noto+Sans+SC:400,700');
</script>
